/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.Color;
import java.awt.SystemColor;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import main.Article;
import main.Film;
import main.FilmVideotheque;

/**
 *
 * @author Bobby
 */
public class InventairePanel extends javax.swing.JPanel {

    /**
     * Creates new form InventairePanel
     */
    public InventairePanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane = new javax.swing.JTabbedPane();
        filmPanel = new javax.swing.JPanel();
        filmInventairePanel = new javax.swing.JPanel();
        jlblFilmInventaire = new javax.swing.JLabel();
        jlblFilmFiltrer = new javax.swing.JLabel();
        jtfFilmFiltrer = new javax.swing.JTextField();
        jscpFilmInventaireInfo = new javax.swing.JScrollPane();
        jtblFilmInventaireInfo = new javax.swing.JTable();
        filmEditPanel = new javax.swing.JPanel();
        jlblFilmAjouterModifier = new javax.swing.JLabel();
        jlblFilmTitre = new javax.swing.JLabel();
        jtfFilmTitre = new javax.swing.JTextField();
        jlblFilmDescription = new javax.swing.JLabel();
        jscpFilmDescription = new javax.swing.JScrollPane();
        jtaFilmDescription = new javax.swing.JTextArea();
        jlblFilmGenre = new javax.swing.JLabel();
        jtfFilmGenre = new javax.swing.JTextField();
        jlblFilmQtee = new javax.swing.JLabel();
        jftfFilmQtee = new javax.swing.JFormattedTextField();
        jlblFilmDuree = new javax.swing.JLabel();
        jftfFilmDureeLocation = new javax.swing.JFormattedTextField();
        jlblFilmPrixLocation = new javax.swing.JLabel();
        jftfFilmPrixLocation = new javax.swing.JFormattedTextField();
        jcbFilmVendable = new javax.swing.JCheckBox();
        jlblFilmPrixVente = new javax.swing.JLabel();
        jftfFilmPrixVente = new javax.swing.JFormattedTextField();
        jbtnFilmAnnuler = new javax.swing.JButton();
        jbtnFilmConfirmer = new javax.swing.JButton();
        articlePanel = new javax.swing.JPanel();
        articleInventairePanel = new javax.swing.JPanel();
        jlblArticleInventaire = new javax.swing.JLabel();
        jlblArticleFiltrer = new javax.swing.JLabel();
        jtfArticleFiltrer = new javax.swing.JTextField();
        jscpArticleInventaireInfo = new javax.swing.JScrollPane();
        jtblArticleInventaireInfo = new javax.swing.JTable();
        articleEditPanel = new javax.swing.JPanel();
        jlblArticleAjouterModifier = new javax.swing.JLabel();
        jlblArticleDescription = new javax.swing.JLabel();
        jtfArticleDescription = new javax.swing.JTextField();
        jbtnArticleAnnuler = new javax.swing.JButton();
        jbtnArticleConfirmer = new javax.swing.JButton();
        jlblArticlePrix = new javax.swing.JLabel();
        jftfArticlePrix = new javax.swing.JFormattedTextField();

        filmInventairePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        filmInventairePanel.setMinimumSize(new java.awt.Dimension(400, 400));

        jlblFilmInventaire.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlblFilmInventaire.setText("Inventaire");

        jlblFilmFiltrer.setText("Filtrer : ");

        jtfFilmFiltrer.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                update();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                update();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {

            }

            public void update(){
                //perform separately, as listener conflicts between the editing component
                //and JComboBox will result in an IllegalStateException due to editing
                //the component when it is locked.

                SwingUtilities.invokeLater(new Runnable(){
                    @Override
                    public void run() {
                        updateFilmTable(jtfFilmFiltrer.getText());
                    }
                });
            }
        });

        jscpFilmInventaireInfo.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);

        jtblFilmInventaireInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Titre", "Description", "Genre", "Quantitée", "Durée des locations", "Prix Location", "Vendable", "Prix Vente"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Float.class, java.lang.Boolean.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        updateFilmTable("");
        jtblFilmInventaireInfo.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jtblFilmInventaireInfo.setMinimumSize(new java.awt.Dimension(675, 32));
        jtblFilmInventaireInfo.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            public void valueChanged(ListSelectionEvent event) {
                if (jtblFilmInventaireInfo.getRowCount() > 0)
                loadFilmRow(event);
            }
        });
        jscpFilmInventaireInfo.setViewportView(jtblFilmInventaireInfo);

        javax.swing.GroupLayout filmInventairePanelLayout = new javax.swing.GroupLayout(filmInventairePanel);
        filmInventairePanel.setLayout(filmInventairePanelLayout);
        filmInventairePanelLayout.setHorizontalGroup(
            filmInventairePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filmInventairePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(filmInventairePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlblFilmInventaire, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(filmInventairePanelLayout.createSequentialGroup()
                        .addComponent(jlblFilmFiltrer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfFilmFiltrer))
                    .addComponent(jscpFilmInventaireInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE))
                .addContainerGap())
        );
        filmInventairePanelLayout.setVerticalGroup(
            filmInventairePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filmInventairePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlblFilmInventaire)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(filmInventairePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblFilmFiltrer, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfFilmFiltrer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jscpFilmInventaireInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                .addContainerGap())
        );

        filmEditPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        filmEditPanel.setMinimumSize(new java.awt.Dimension(400, 400));

        jlblFilmAjouterModifier.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlblFilmAjouterModifier.setText("Ajouter / Modifier");

        jlblFilmTitre.setText("Titre : ");

        jlblFilmDescription.setText("Description : ");

        jtaFilmDescription.setColumns(20);
        jtaFilmDescription.setRows(5);
        jscpFilmDescription.setViewportView(jtaFilmDescription);

        jlblFilmGenre.setText("Genre : ");

        jlblFilmQtee.setText("Quantitée : ");

        jftfFilmQtee.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));

        jlblFilmDuree.setText("Durée de location : ");

        jftfFilmDureeLocation.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));

        jlblFilmPrixLocation.setText("Prix Location : ");

        jftfFilmPrixLocation.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,###.00"))));

        jcbFilmVendable.setText("Vendable");
        jcbFilmVendable.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbFilmVendableItemStateChanged(evt);
            }
        });

        jlblFilmPrixVente.setForeground(java.awt.SystemColor.textInactiveText);
        jlblFilmPrixVente.setText("Prix Vente : ");

        jftfFilmPrixVente.setEditable(false);
        java.text.DecimalFormat decimalFormat = new java.text.DecimalFormat("#,###.00");
        decimalFormat.setParseIntegerOnly(true);
        jftfFilmPrixVente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,###.00"))));

        jbtnFilmAnnuler.setText("Annuler");
        jbtnFilmAnnuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnFilmAnnulerActionPerformed(evt);
            }
        });

        jbtnFilmConfirmer.setText("Confirmer");
        jbtnFilmConfirmer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnFilmConfirmerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout filmEditPanelLayout = new javax.swing.GroupLayout(filmEditPanel);
        filmEditPanel.setLayout(filmEditPanelLayout);
        filmEditPanelLayout.setHorizontalGroup(
            filmEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filmEditPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(filmEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlblFilmAjouterModifier, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, filmEditPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jbtnFilmAnnuler)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnFilmConfirmer))
                    .addGroup(filmEditPanelLayout.createSequentialGroup()
                        .addGroup(filmEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlblFilmGenre)
                            .addComponent(jlblFilmTitre)
                            .addComponent(jlblFilmDescription)
                            .addComponent(jlblFilmDuree, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbFilmVendable)
                            .addComponent(jlblFilmPrixLocation)
                            .addComponent(jlblFilmPrixVente)
                            .addComponent(jlblFilmQtee))
                        .addGap(1, 1, 1)
                        .addGroup(filmEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfFilmTitre)
                            .addComponent(jscpFilmDescription, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                            .addComponent(jftfFilmPrixLocation)
                            .addComponent(jftfFilmPrixVente)
                            .addComponent(jftfFilmDureeLocation)
                            .addComponent(jtfFilmGenre)
                            .addComponent(jftfFilmQtee))))
                .addContainerGap())
        );
        filmEditPanelLayout.setVerticalGroup(
            filmEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filmEditPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlblFilmAjouterModifier)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(filmEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblFilmTitre, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfFilmTitre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(filmEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlblFilmDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jscpFilmDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(filmEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblFilmGenre, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfFilmGenre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(filmEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblFilmQtee, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jftfFilmQtee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(filmEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblFilmDuree)
                    .addComponent(jftfFilmDureeLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(filmEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblFilmPrixLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jftfFilmPrixLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbFilmVendable, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(filmEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlblFilmPrixVente, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jftfFilmPrixVente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(filmEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnFilmConfirmer)
                    .addComponent(jbtnFilmAnnuler))
                .addContainerGap())
        );

        javax.swing.GroupLayout filmPanelLayout = new javax.swing.GroupLayout(filmPanel);
        filmPanel.setLayout(filmPanelLayout);
        filmPanelLayout.setHorizontalGroup(
            filmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filmPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(filmInventairePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filmEditPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        filmPanelLayout.setVerticalGroup(
            filmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filmPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(filmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(filmEditPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(filmInventairePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane.addTab("Films", filmPanel);

        articleInventairePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        articleInventairePanel.setMinimumSize(new java.awt.Dimension(400, 400));

        jlblArticleInventaire.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlblArticleInventaire.setText("Inventaire");

        jlblArticleFiltrer.setText("Filtrer : ");

        jtfArticleFiltrer.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                update();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                update();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {

            }

            public void update(){
                //perform separately, as listener conflicts between the editing component
                //and JComboBox will result in an IllegalStateException due to editing
                //the component when it is locked.

                SwingUtilities.invokeLater(new Runnable(){
                    @Override
                    public void run() {
                        updateArticleTable(jtfArticleFiltrer.getText());
                    }
                });
            }
        });

        jscpArticleInventaireInfo.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);

        jtblArticleInventaireInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Description", "Prix Vente"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        updateArticleTable("");
        jtblArticleInventaireInfo.setMinimumSize(new java.awt.Dimension(675, 32));
        jtblArticleInventaireInfo.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            public void valueChanged(ListSelectionEvent event) {
                if (jtblArticleInventaireInfo.getRowCount() > 0)
                loadArticleRow(event);
            }
        });
        jscpArticleInventaireInfo.setViewportView(jtblArticleInventaireInfo);

        javax.swing.GroupLayout articleInventairePanelLayout = new javax.swing.GroupLayout(articleInventairePanel);
        articleInventairePanel.setLayout(articleInventairePanelLayout);
        articleInventairePanelLayout.setHorizontalGroup(
            articleInventairePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(articleInventairePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(articleInventairePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlblArticleInventaire, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(articleInventairePanelLayout.createSequentialGroup()
                        .addComponent(jlblArticleFiltrer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfArticleFiltrer))
                    .addComponent(jscpArticleInventaireInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE))
                .addContainerGap())
        );
        articleInventairePanelLayout.setVerticalGroup(
            articleInventairePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(articleInventairePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlblArticleInventaire)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(articleInventairePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblArticleFiltrer, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfArticleFiltrer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jscpArticleInventaireInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                .addContainerGap())
        );

        articleEditPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        articleEditPanel.setMinimumSize(new java.awt.Dimension(400, 400));

        jlblArticleAjouterModifier.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlblArticleAjouterModifier.setText("Ajouter / Modifier");

        jlblArticleDescription.setText("Description : ");

        jbtnArticleAnnuler.setText("Annuler");
        jbtnArticleAnnuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnArticleAnnulerActionPerformed(evt);
            }
        });

        jbtnArticleConfirmer.setText("Confirmer");
        jbtnArticleConfirmer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnArticleConfirmerActionPerformed(evt);
            }
        });

        jlblArticlePrix.setText("Prix : ");

        jftfArticlePrix.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));

        javax.swing.GroupLayout articleEditPanelLayout = new javax.swing.GroupLayout(articleEditPanel);
        articleEditPanel.setLayout(articleEditPanelLayout);
        articleEditPanelLayout.setHorizontalGroup(
            articleEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(articleEditPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(articleEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlblArticleAjouterModifier, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, articleEditPanelLayout.createSequentialGroup()
                        .addGap(0, 219, Short.MAX_VALUE)
                        .addComponent(jbtnArticleAnnuler)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnArticleConfirmer))
                    .addGroup(articleEditPanelLayout.createSequentialGroup()
                        .addGroup(articleEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlblArticleDescription)
                            .addComponent(jlblArticlePrix))
                        .addGap(31, 31, 31)
                        .addGroup(articleEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfArticleDescription)
                            .addComponent(jftfArticlePrix))))
                .addContainerGap())
        );
        articleEditPanelLayout.setVerticalGroup(
            articleEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(articleEditPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlblArticleAjouterModifier)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(articleEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblArticleDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfArticleDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(articleEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblArticlePrix, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jftfArticlePrix, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(articleEditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnArticleConfirmer)
                    .addComponent(jbtnArticleAnnuler))
                .addContainerGap())
        );

        javax.swing.GroupLayout articlePanelLayout = new javax.swing.GroupLayout(articlePanel);
        articlePanel.setLayout(articlePanelLayout);
        articlePanelLayout.setHorizontalGroup(
            articlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(articlePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(articleInventairePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(articleEditPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        articlePanelLayout.setVerticalGroup(
            articlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(articlePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(articlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(articleEditPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(articleInventairePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane.addTab("Articles", articlePanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void resetFilmErrors() {
        jtfFilmTitre.setBackground(Color.white);
        jtaFilmDescription.setBackground(Color.white);
        jtfFilmGenre.setBackground(Color.white);
        jftfFilmDureeLocation.setBackground(Color.white);
        jftfFilmPrixLocation.setBackground(Color.white);
        if (jftfFilmPrixVente.isEditable()) {
            jftfFilmPrixVente.setBackground(Color.white);
        }
    }
    
    private void emptyFilmFields() {
        jtfFilmTitre.setText("");
        jtaFilmDescription.setText("");
        jtfFilmGenre.setText("");
        jftfFilmDureeLocation.setValue(null);
        jftfFilmPrixLocation.setValue(null);
        jcbFilmVendable.setSelected(false);
        jftfFilmPrixVente.setValue(null);
    }
    
    private void resetArticleErrors() {
        jtfArticleDescription.setBackground(Color.white);
        jftfArticlePrix.setBackground(Color.white);
    }
    
    private void emptyArticleFields() {
        jtfArticleDescription.setText("");
        jftfArticlePrix.setValue(null);
    }

    private void jcbFilmVendableItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbFilmVendableItemStateChanged
        if (evt.getStateChange() == 1) {
            jftfFilmPrixVente.setEditable(true);
            jlblFilmPrixVente.setForeground(Color.black);
        } else if (evt.getStateChange() == 2) {
            jftfFilmPrixVente.setEditable(false);
            jlblFilmPrixVente.setForeground(SystemColor.textInactiveText);
        }
    }//GEN-LAST:event_jcbFilmVendableItemStateChanged

    private void jbtnFilmAnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnFilmAnnulerActionPerformed
        emptyFilmFields();
        resetFilmErrors();
    }//GEN-LAST:event_jbtnFilmAnnulerActionPerformed

    private void jbtnFilmConfirmerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnFilmConfirmerActionPerformed
        resetFilmErrors();
        try {

            String titre = jtfFilmTitre.getText();
            String description = jtaFilmDescription.getText();
            String genre = jtfFilmGenre.getText();

            if (titre.isEmpty()) {
                throw new RequiredException(jtfFilmTitre);
            }
            if (description.isEmpty()) {
                throw new RequiredException(jtaFilmDescription);
            }
            if (genre.isEmpty()) {
                throw new RequiredException(jtfFilmGenre);
            }
            if (jftfFilmQtee.getValue() == null) {
                throw new RequiredException(jftfFilmQtee);
            }
            if (jftfFilmDureeLocation.getValue() == null) {
                throw new RequiredException(jftfFilmDureeLocation);
            }
            if (jftfFilmPrixLocation.getValue() == null) {
                throw new RequiredException(jftfFilmPrixLocation);
            }
            float prixVente = 0;
            if (jcbFilmVendable.isSelected()) {
                if (jftfFilmPrixVente.getValue() == null) {
                    throw new RequiredException(jftfFilmPrixVente);
                }
                prixVente = ((Number)jftfFilmPrixVente.getValue()).floatValue();
                if (prixVente < 0) {
                    throw new RequiredException(jftfFilmPrixVente);
                }
            }
            int qtee = ((Number)jftfFilmQtee.getValue()).intValue();
            int dureeLocation = ((Number)jftfFilmDureeLocation.getValue()).intValue();
            float prixLocation = ((Number)jftfFilmPrixLocation.getValue()).floatValue();

            if (qtee < 0)
                throw new RequiredException(jftfFilmQtee);
            if (dureeLocation < 1) {
                throw new RequiredException(jftfFilmDureeLocation);
            }
            if (prixLocation < 0) {
                throw new RequiredException(jftfFilmPrixLocation);
            }

            Film.ajouterFilm(new Film(titre, description, genre));
            FilmVideotheque.ajouterFilmVideotheque(new FilmVideotheque(Film.rechercheFilm(titre).get(0), jcbFilmVendable.isSelected(), qtee, dureeLocation, prixLocation, prixVente));
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(InventairePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(InventairePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RequiredException ex) {

        }
        updateFilmTable("");
    }//GEN-LAST:event_jbtnFilmConfirmerActionPerformed

    private void jbtnArticleAnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnArticleAnnulerActionPerformed
        emptyArticleFields();
        resetArticleErrors();
    }//GEN-LAST:event_jbtnArticleAnnulerActionPerformed

    private void jbtnArticleConfirmerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnArticleConfirmerActionPerformed
        resetArticleErrors();
        try {

            String description = jtfArticleDescription.getText();
            
            if (description.isEmpty()) {
                throw new RequiredException(jtfArticleDescription);
            }
            if (jftfArticlePrix.getValue() == null) {
                throw new RequiredException(jftfArticlePrix);
            }
            float prix = ((Number)jftfArticlePrix.getValue()).floatValue();

            if (prix < 0) {
                throw new RequiredException(jftfArticlePrix);
            }

            Article.ajouterArticle(new Article(description, prix));
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(InventairePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(InventairePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RequiredException ex) {

        }
        updateArticleTable("");
    }//GEN-LAST:event_jbtnArticleConfirmerActionPerformed

    private void updateFilmTable(String filtre){
        try {
            List<FilmVideotheque> listeFilm = FilmVideotheque.rechercheFilm(filtre);
            DefaultTableModel model = (DefaultTableModel)jtblFilmInventaireInfo.getModel();
            model.setRowCount(0);
            for (FilmVideotheque film : listeFilm){
                model.addRow(new Object[]{film.getFilm().getId(), film.getFilm().getTitre(), film.getFilm().getDescription(), film.getFilm().getGenre(), film.getQtee(), film.getDureeLocation(), film.getPrixLocation(), film.isVendable(), film.getPrixVente()});
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(InventairePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(InventairePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void updateArticleTable(String filtre){
        try {
            List<Article> listeArticle = Article.trouverArticle(filtre);
            DefaultTableModel model = (DefaultTableModel)jtblArticleInventaireInfo.getModel();
            model.setRowCount(0);
            for (Article article : listeArticle){
                model.addRow(new Object[]{article.getId(), article.getDescription(), article.getPrix()});
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(InventairePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(InventairePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void loadFilmRow(ListSelectionEvent evt){
        DefaultTableModel model = (DefaultTableModel)jtblFilmInventaireInfo.getModel();
        int row = jtblFilmInventaireInfo.getSelectedRow();
        if (row >= 0) {
            jtfFilmTitre.setText((String)model.getValueAt(row, 1));
            jtaFilmDescription.setText((String)model.getValueAt(row, 2));
            jtfFilmGenre.setText((String)model.getValueAt(row, 3));
            jftfFilmQtee.setValue((int)model.getValueAt(row, 4));
            jftfFilmDureeLocation.setValue((int)model.getValueAt(row, 5));
            jftfFilmPrixLocation.setValue((float)model.getValueAt(row, 6));
            jcbFilmVendable.setSelected((boolean)model.getValueAt(row, 7));
            if (jcbFilmVendable.isSelected())
                jftfFilmPrixVente.setValue((float)model.getValueAt(row, 8));
            else
                jftfFilmPrixVente.setValue(null);
        }
    }
    
    private void loadArticleRow(ListSelectionEvent evt){
        DefaultTableModel model = (DefaultTableModel)jtblArticleInventaireInfo.getModel();
        int row = jtblArticleInventaireInfo.getSelectedRow();
        if (row >= 0) {
            jtfArticleDescription.setText((String)model.getValueAt(row, 1));
            jftfArticlePrix.setValue((float)model.getValueAt(row, 2));
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel articleEditPanel;
    private javax.swing.JPanel articleInventairePanel;
    private javax.swing.JPanel articlePanel;
    private javax.swing.JPanel filmEditPanel;
    private javax.swing.JPanel filmInventairePanel;
    private javax.swing.JPanel filmPanel;
    private javax.swing.JTabbedPane jTabbedPane;
    private javax.swing.JButton jbtnArticleAnnuler;
    private javax.swing.JButton jbtnArticleConfirmer;
    private javax.swing.JButton jbtnFilmAnnuler;
    private javax.swing.JButton jbtnFilmConfirmer;
    private javax.swing.JCheckBox jcbFilmVendable;
    private javax.swing.JFormattedTextField jftfArticlePrix;
    private javax.swing.JFormattedTextField jftfFilmDureeLocation;
    private javax.swing.JFormattedTextField jftfFilmPrixLocation;
    private javax.swing.JFormattedTextField jftfFilmPrixVente;
    private javax.swing.JFormattedTextField jftfFilmQtee;
    private javax.swing.JLabel jlblArticleAjouterModifier;
    private javax.swing.JLabel jlblArticleDescription;
    private javax.swing.JLabel jlblArticleFiltrer;
    private javax.swing.JLabel jlblArticleInventaire;
    private javax.swing.JLabel jlblArticlePrix;
    private javax.swing.JLabel jlblFilmAjouterModifier;
    private javax.swing.JLabel jlblFilmDescription;
    private javax.swing.JLabel jlblFilmDuree;
    private javax.swing.JLabel jlblFilmFiltrer;
    private javax.swing.JLabel jlblFilmGenre;
    private javax.swing.JLabel jlblFilmInventaire;
    private javax.swing.JLabel jlblFilmPrixLocation;
    private javax.swing.JLabel jlblFilmPrixVente;
    private javax.swing.JLabel jlblFilmQtee;
    private javax.swing.JLabel jlblFilmTitre;
    private javax.swing.JScrollPane jscpArticleInventaireInfo;
    private javax.swing.JScrollPane jscpFilmDescription;
    private javax.swing.JScrollPane jscpFilmInventaireInfo;
    private javax.swing.JTextArea jtaFilmDescription;
    private javax.swing.JTable jtblArticleInventaireInfo;
    private javax.swing.JTable jtblFilmInventaireInfo;
    private javax.swing.JTextField jtfArticleDescription;
    private javax.swing.JTextField jtfArticleFiltrer;
    private javax.swing.JTextField jtfFilmFiltrer;
    private javax.swing.JTextField jtfFilmGenre;
    private javax.swing.JTextField jtfFilmTitre;
    // End of variables declaration//GEN-END:variables
}
