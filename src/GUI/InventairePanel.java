/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.Color;
import java.awt.SystemColor;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import main.Film;
import main.FilmVideotheque;

/**
 *
 * @author Bobby
 */
public class InventairePanel extends javax.swing.JPanel {

    /**
     * Creates new form InventairePanel
     */
    public InventairePanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ajouterModifierPanel = new javax.swing.JPanel();
        jlblAjouterModifier = new javax.swing.JLabel();
        jlblTitre = new javax.swing.JLabel();
        jlblDescription = new javax.swing.JLabel();
        jlblGenre = new javax.swing.JLabel();
        jlblDuree = new javax.swing.JLabel();
        jcbVendable = new javax.swing.JCheckBox();
        jlblPrixVente = new javax.swing.JLabel();
        jbtnAnnuler = new javax.swing.JButton();
        jbtnConfirmer = new javax.swing.JButton();
        jtfTitre = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtaDescription = new javax.swing.JTextArea();
        jlblPrixLocation = new javax.swing.JLabel();
        jftfPrixLocation = new javax.swing.JFormattedTextField();
        jftfPrixVente = new javax.swing.JFormattedTextField();
        jftfDureeLocation = new javax.swing.JFormattedTextField();
        jtfGenre = new javax.swing.JTextField();
        jlblQtee = new javax.swing.JLabel();
        jftfQtee = new javax.swing.JFormattedTextField();
        inventairePanel = new javax.swing.JPanel();
        jlblInventaire = new javax.swing.JLabel();
        jlblFiltrer = new javax.swing.JLabel();
        jtfFiltrer = new javax.swing.JTextField();
        jscpInventaireInfo = new javax.swing.JScrollPane();
        jtblInventaireInfo = new javax.swing.JTable();

        ajouterModifierPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        ajouterModifierPanel.setMinimumSize(new java.awt.Dimension(400, 400));
        ajouterModifierPanel.setPreferredSize(new java.awt.Dimension(400, 400));

        jlblAjouterModifier.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlblAjouterModifier.setText("Ajouter / Modifier");

        jlblTitre.setText("Titre : ");

        jlblDescription.setText("Description : ");

        jlblGenre.setText("Genre : ");

        jlblDuree.setText("Durée de location : ");

        jcbVendable.setText("Vendable");
        jcbVendable.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbVendableItemStateChanged(evt);
            }
        });

        jlblPrixVente.setForeground(java.awt.SystemColor.textInactiveText);
        jlblPrixVente.setText("Prix Vente : ");

        jbtnAnnuler.setText("Annuler");
        jbtnAnnuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAnnulerActionPerformed(evt);
            }
        });

        jbtnConfirmer.setText("Confirmer");
        jbtnConfirmer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnConfirmerActionPerformed(evt);
            }
        });

        jtaDescription.setColumns(20);
        jtaDescription.setRows(5);
        jScrollPane1.setViewportView(jtaDescription);

        jlblPrixLocation.setText("Prix Location : ");

        jftfPrixLocation.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,###.00"))));

        jftfPrixVente.setEditable(false);
        java.text.DecimalFormat decimalFormat = new java.text.DecimalFormat("#,###.00");
        decimalFormat.setParseIntegerOnly(true);
        jftfPrixVente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(decimalFormat)));

        jftfDureeLocation.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));

        jlblQtee.setText("Quantitée : ");

        jftfQtee.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));

        javax.swing.GroupLayout ajouterModifierPanelLayout = new javax.swing.GroupLayout(ajouterModifierPanel);
        ajouterModifierPanel.setLayout(ajouterModifierPanelLayout);
        ajouterModifierPanelLayout.setHorizontalGroup(
            ajouterModifierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ajouterModifierPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ajouterModifierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlblAjouterModifier, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ajouterModifierPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jbtnAnnuler)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnConfirmer))
                    .addGroup(ajouterModifierPanelLayout.createSequentialGroup()
                        .addGroup(ajouterModifierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlblGenre)
                            .addComponent(jlblTitre)
                            .addComponent(jlblDescription)
                            .addComponent(jlblDuree, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbVendable)
                            .addComponent(jlblPrixLocation)
                            .addComponent(jlblPrixVente)
                            .addComponent(jlblQtee))
                        .addGap(1, 1, 1)
                        .addGroup(ajouterModifierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfTitre)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                            .addComponent(jftfPrixLocation)
                            .addComponent(jftfPrixVente)
                            .addComponent(jftfDureeLocation)
                            .addComponent(jtfGenre)
                            .addComponent(jftfQtee))))
                .addContainerGap())
        );
        ajouterModifierPanelLayout.setVerticalGroup(
            ajouterModifierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ajouterModifierPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlblAjouterModifier)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ajouterModifierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblTitre, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfTitre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ajouterModifierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlblDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ajouterModifierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblGenre, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfGenre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ajouterModifierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblQtee, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jftfQtee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ajouterModifierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblDuree)
                    .addComponent(jftfDureeLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ajouterModifierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblPrixLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jftfPrixLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbVendable, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ajouterModifierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlblPrixVente, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jftfPrixVente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ajouterModifierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnConfirmer)
                    .addComponent(jbtnAnnuler))
                .addContainerGap())
        );

        inventairePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        inventairePanel.setMinimumSize(new java.awt.Dimension(400, 400));
        inventairePanel.setPreferredSize(new java.awt.Dimension(400, 400));

        jlblInventaire.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlblInventaire.setText("Inventaire");

        jlblFiltrer.setText("Filtrer : ");

        jtfFiltrer.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                update();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                update();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {

            }

            public void update(){
                //perform separately, as listener conflicts between the editing component
                //and JComboBox will result in an IllegalStateException due to editing
                //the component when it is locked.

                SwingUtilities.invokeLater(new Runnable(){
                    @Override
                    public void run() {
                        updateTable(jtfFiltrer.getText());
                    }
                });
            }
        });

        jscpInventaireInfo.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);

        jtblInventaireInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Titre", "Description", "Genre", "Quantitée", "Durée des locations", "Prix Location", "Vendable", "Prix Vente"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Float.class, java.lang.Boolean.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        updateTable("");
        jtblInventaireInfo.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jtblInventaireInfo.setMinimumSize(new java.awt.Dimension(675, 32));
        jtblInventaireInfo.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            public void valueChanged(ListSelectionEvent event) {
                if (jtblInventaireInfo.getRowCount() > 0)
                loadRow(event);
            }
        });
        jscpInventaireInfo.setViewportView(jtblInventaireInfo);

        javax.swing.GroupLayout inventairePanelLayout = new javax.swing.GroupLayout(inventairePanel);
        inventairePanel.setLayout(inventairePanelLayout);
        inventairePanelLayout.setHorizontalGroup(
            inventairePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inventairePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inventairePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlblInventaire, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(inventairePanelLayout.createSequentialGroup()
                        .addComponent(jlblFiltrer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfFiltrer))
                    .addComponent(jscpInventaireInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE))
                .addContainerGap())
        );
        inventairePanelLayout.setVerticalGroup(
            inventairePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inventairePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlblInventaire)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(inventairePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblFiltrer, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfFiltrer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jscpInventaireInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inventairePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ajouterModifierPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ajouterModifierPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inventairePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void resetErrors() {
        jtfTitre.setBackground(Color.white);
        jtaDescription.setBackground(Color.white);
        jtfGenre.setBackground(Color.white);
        jftfDureeLocation.setBackground(Color.white);
        jftfPrixLocation.setBackground(Color.white);
        if (jftfPrixVente.isEditable()) {
            jftfPrixVente.setBackground(Color.white);
        }
    }
    
    private void emptyFields() {
        jtfTitre.setText("");
        jtaDescription.setText("");
        jtfGenre.setText("");
        jftfDureeLocation.setValue(null);
        jftfPrixLocation.setValue(null);
        jcbVendable.setSelected(false);
        jftfPrixVente.setValue(null);
    }

    private void jcbVendableItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbVendableItemStateChanged
        if (evt.getStateChange() == 1) {
            jftfPrixVente.setEditable(true);
            jlblPrixVente.setForeground(Color.black);
        } else if (evt.getStateChange() == 2) {
            jftfPrixVente.setEditable(false);
            jlblPrixVente.setForeground(SystemColor.textInactiveText);
        }

    }//GEN-LAST:event_jcbVendableItemStateChanged

    private void jbtnConfirmerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnConfirmerActionPerformed
        resetErrors();
        try {

            String titre = jtfTitre.getText();
            String description = jtaDescription.getText();
            String genre = jtfGenre.getText();

            if (titre.isEmpty()) {
                throw new RequiredException(jtfTitre);
            }
            if (description.isEmpty()) {
                throw new RequiredException(jtaDescription);
            }
            if (genre.isEmpty()) {
                throw new RequiredException(jtfGenre);
            }
            if (jftfQtee.getValue() == null) {
                throw new RequiredException(jftfQtee);
            }
            if (jftfDureeLocation.getValue() == null) {
                throw new RequiredException(jftfDureeLocation);
            }
            if (jftfPrixLocation.getValue() == null) {
                throw new RequiredException(jftfPrixLocation);
            }
            float prixVente = 0;
            if (jcbVendable.isSelected()) {
                if (jftfPrixVente.getValue() == null) {
                    throw new RequiredException(jftfPrixVente);
                }
                prixVente = ((Number)jftfPrixVente.getValue()).floatValue();
                if (prixVente < 0) {
                    throw new RequiredException(jftfPrixVente);
                }
            }
            int qtee = ((Number)jftfQtee.getValue()).intValue();
            int dureeLocation = ((Number)jftfDureeLocation.getValue()).intValue();
            float prixLocation = ((Number)jftfPrixLocation.getValue()).floatValue();

            if (qtee < 0)
                throw new RequiredException(jftfQtee);
            if (dureeLocation < 1) {
                throw new RequiredException(jftfDureeLocation);
            }
            if (prixLocation < 0) {
                throw new RequiredException(jftfPrixLocation);
            }

            Film.ajouterFilm(new Film(titre, description, genre));
            FilmVideotheque.ajouterFilmVideotheque(new FilmVideotheque(Film.rechercheFilm(titre).get(0), jcbVendable.isSelected(), qtee, dureeLocation, prixLocation, prixVente));
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(InventairePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(InventairePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RequiredException ex) {

        }
        updateTable("");
    }//GEN-LAST:event_jbtnConfirmerActionPerformed

    private void jbtnAnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAnnulerActionPerformed
        emptyFields();
        resetErrors();
    }//GEN-LAST:event_jbtnAnnulerActionPerformed

    private void updateTable(String filtre){
        try {
            List<FilmVideotheque> listeFilm = FilmVideotheque.rechercheFilm(filtre);
            DefaultTableModel model = (DefaultTableModel)jtblInventaireInfo.getModel();
            model.setRowCount(0);
            for (FilmVideotheque film : listeFilm){
                model.addRow(new Object[]{film.getFilm().getId(), film.getFilm().getTitre(), film.getFilm().getDescription(), film.getFilm().getGenre(), film.getQtee(), film.getDureeLocation(), film.getPrixLocation(), film.isVendable(), film.getPrixVente()});
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(InventairePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(InventairePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void loadRow(ListSelectionEvent evt){
        DefaultTableModel model = (DefaultTableModel)jtblInventaireInfo.getModel();
        int row = jtblInventaireInfo.getSelectedRow();
        if (row >= 0) {
            jtfTitre.setText((String)model.getValueAt(row, 1));
            jtaDescription.setText((String)model.getValueAt(row, 2));
            jtfGenre.setText((String)model.getValueAt(row, 3));
            jftfQtee.setValue((int)model.getValueAt(row, 4));
            jftfDureeLocation.setValue((int)model.getValueAt(row, 5));
            jftfPrixLocation.setValue((float)model.getValueAt(row, 6));
            jcbVendable.setSelected((boolean)model.getValueAt(row, 7));
            if (jcbVendable.isSelected())
                jftfPrixVente.setValue((float)model.getValueAt(row, 8));
            else
                jftfPrixVente.setValue(null);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ajouterModifierPanel;
    private javax.swing.JPanel inventairePanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnAnnuler;
    private javax.swing.JButton jbtnConfirmer;
    private javax.swing.JCheckBox jcbVendable;
    private javax.swing.JFormattedTextField jftfDureeLocation;
    private javax.swing.JFormattedTextField jftfPrixLocation;
    private javax.swing.JFormattedTextField jftfPrixVente;
    private javax.swing.JFormattedTextField jftfQtee;
    private javax.swing.JLabel jlblAjouterModifier;
    private javax.swing.JLabel jlblDescription;
    private javax.swing.JLabel jlblDuree;
    private javax.swing.JLabel jlblFiltrer;
    private javax.swing.JLabel jlblGenre;
    private javax.swing.JLabel jlblInventaire;
    private javax.swing.JLabel jlblPrixLocation;
    private javax.swing.JLabel jlblPrixVente;
    private javax.swing.JLabel jlblQtee;
    private javax.swing.JLabel jlblTitre;
    private javax.swing.JScrollPane jscpInventaireInfo;
    private javax.swing.JTextArea jtaDescription;
    private javax.swing.JTable jtblInventaireInfo;
    private javax.swing.JTextField jtfFiltrer;
    private javax.swing.JTextField jtfGenre;
    private javax.swing.JTextField jtfTitre;
    // End of variables declaration//GEN-END:variables
}
